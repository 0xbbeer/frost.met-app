on:
  pull_request:
    branches:
      - stage
    types: [assigned, opened, synchronize, reopened]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: STAGE CI
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    


  build_and_test:
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create .env 
        env:
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
          POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
          APP_SECRET_KEY: ${{secrets.APP_SECRET_KEY}}
          FROST_API_ID: ${{secrets.FROST_API_ID}}
          FROST_API_PASSWORD: ${{secrets.FROST_API_PASSWORD}}
        run: | 
          echo "POSTGRES_DB='$POSTGRES_DB'" > .env  
          echo "POSTGRES_USER='$POSTGRES_USER'" >> .env
          echo "POSTGRES_PASSWORD='$POSTGRES_PASSWORD'" >> .env
          echo "POSTGRES_HOST='$POSTGRES_HOST'" >> .env
          echo "POSTGRES_PORT='$POSTGRES_PORT'" >> .env
          echo "APP_SECRET_KEY='$APP_SECRET_KEY'" >> .env
          echo "FROST_API_ID='$FROST_API_ID'" >> .env
          echo "FROST_API_PASSWORD='$FROST_API_PASSWORD'" >> .env
      - name: login to ghcr.io
        run: docker login ghcr.io -u 0xbbeer -p ${{secrets.FROST_API_PASSWORD}}
      - name: docker-compose build
        run: docker-compose build 
      - name: Sleep
        run: sleep 10
      - name: docker-compose up
        run: docker-compose up -d
      - name: run smoke and unit test
        run: docker-compose run --rm app python manage.py test
      